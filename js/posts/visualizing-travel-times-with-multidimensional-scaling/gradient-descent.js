function getMdsCoordinatesWithGradientDescent(t,{lr:o=1,maxSteps:e=200,minLossDifference:r=1e-7,momentum:s=0,logEvery:n=0}={}){const i=t.rows;let a=getInitialMdsCoordinates(i);const l=[];let M=null;for(let c=0;c<e;c++){const e=getMdsLoss(t,a);if(l.push(e),l.length>1){const t=l[l.length-2];if(Math.abs(t-e)<r)return{coordinates:a,lossPerStep:l}}n>0&&c%n==0&&console.log(`Step: ${c}, loss: ${e}`);for(let e=0;e<i;e++){const r=getGradientForCoordinate(t,a,e);M=0===s||null==M?r:mlMatrix.Matrix.add(mlMatrix.Matrix.mul(M,s),r);const n=mlMatrix.Matrix.mul(M,o),i=mlMatrix.Matrix.sub(a.getRowVector(e),n);a.setRow(e,i)}}return{coordinates:a,lossPerStep:l}}function getMdsCoordinatesWithGaussNewton(t,{lr:o=.1,maxSteps:e=200,minLossDifference:r=1e-7,logEvery:s=0}={}){const n=t.rows;let i=getInitialMdsCoordinates(n);const a=i.columns,l=[];for(let M=0;M<e;M++){const e=getMdsLoss(t,i);if(l.push(e),l.length>1){const t=l[l.length-2];if(Math.abs(t-e)<r)return{coordinates:i,lossPerStep:l}}s>0&&M%s==0&&console.log(`Step: ${M}, loss: ${e}`);const{residuals:c,jacobian:u}=getResidualsWithJacobian(t,i),m=mlMatrix.pseudoInverse(u).mmul(c);for(let t=0;t<n;t++)for(let e=0;e<a;e++){const r=t*a+e,s=i.get(t,e)-o*m.get(r,0);i.set(t,e,s)}}return{coordinates:i,lossPerStep:l}}function getInitialMdsCoordinates(t,o=2,e=0){const r=mlMatrix.Matrix.rand(t,o,{random:new Math.seedrandom(e)});return mlMatrix.Matrix.div(r,Math.sqrt(o))}function getMdsLoss(t,o){let e=0;const r=Math.pow(o.rows,2);for(let s=0;s<o.rows;s++)for(let n=0;n<o.rows;n++){if(s===n)continue;const i=o.getRowVector(s),a=o.getRowVector(n),l=t.get(s,n),M=mlMatrix.Matrix.sub(i,a).norm();e+=Math.pow(l-M,2)/r}return e}function getResidualsWithJacobian(t,o){const e=[],r=o.rows,s=o.columns,n=mlMatrix.Matrix.zeros(r*r,r*s);for(let i=0;i<r;i++)for(let a=0;a<r;a++){if(i===a){e.push(0);continue}const l=o.getRowVector(i),M=o.getRowVector(a),c=mlMatrix.Matrix.sub(l,M).pow(2).sum(),u=Math.sqrt(c),m=(t.get(i,a)-u)/r;e.push(m);const x=-1/r,d=.5/Math.sqrt(c),g=mlMatrix.Matrix.mul(mlMatrix.Matrix.sub(l,M),2),f=mlMatrix.Matrix.mul(g,x*d),h=r*i+a;for(let t=0;t<s;t++){const o=s*i+t,e=n.get(h,o)+f.get(0,t);n.set(h,o,e)}}return{residuals:mlMatrix.Matrix.columnVector(e),jacobian:n}}function getGradientForCoordinate(t,o,e){const r=o.getRowVector(e),s=Math.pow(o.rows,2);let n=mlMatrix.Matrix.zeros(1,r.columns);for(let i=0;i<o.rows;i++){if(e===i)continue;const a=o.getRowVector(i),l=mlMatrix.Matrix.sub(r,a).pow(2).sum(),M=Math.sqrt(l),c=[t.get(e,i),t.get(i,e)];for(const t of c){const o=-2*(t-M)/s,e=.5/Math.sqrt(l),i=mlMatrix.Matrix.mul(mlMatrix.Matrix.sub(r,a),2),c=mlMatrix.Matrix.mul(i,o*e);n=mlMatrix.Matrix.add(n,c)}}return n}