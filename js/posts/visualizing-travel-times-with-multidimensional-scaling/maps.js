const TRAVEL_MODE=google.maps.TravelMode.TRANSIT,INITIAL_CITY_NAMES=["San Francisco","Sacramento","Los Angeles","Las Vegas"],CITY_MAP_ID="city-map",COORDINATE_MAP_ID="coordinate-map",DISTANCE_TABLE_ID="distance-table",DURATION_TABLE_ID="duration-table",CUSTOM_MAP_TYPE_ID="customStyle",CUSTOM_MAP_TYPE=new google.maps.StyledMapType([{stylers:[{visibility:"simplified"}]},{featureType:"road",stylers:[{visibility:"off"}]},{featureType:"administrative",stylers:[{visibility:"off"}]},{featureType:"poi",stylers:[{visibility:"off"}]},{featureType:"administrative.country",elementType:"geometry.stroke",stylers:[{visibility:"on"}]}],{name:"Custom Style"}),MAP_OPTIONS={center:{lat:36.1141105,lng:-116.4614945},zoom:3,navigationControl:!1,mapTypeControl:!1,scrollwheel:!1,streetViewControl:!1,disableDefaultUI:!0},UNIT_SECONDS="seconds",UNIT_KILOMETERS="km",OPTIMIZER_COMPARISON_CHART_ID="optimizer-comparison-chart";let CITY_MAP,COORDINATE_MAP,GEOCODER,DISTANCE_MATRIX_SERVICE;function displayError(e){null==e&&(e="Something went wrong with the Google Maps API. Please try reloading the page"),$("#post-error").show().html(e),console.error(e)}function initMaps(e){CITY_MAP=new google.maps.Map(document.getElementById("city-map"),MAP_OPTIONS),CITY_MAP.mapTypes.set("customStyle",CUSTOM_MAP_TYPE),CITY_MAP.setMapTypeId("customStyle"),COORDINATE_MAP=new google.maps.Map(document.getElementById("coordinate-map"),MAP_OPTIONS),COORDINATE_MAP.mapTypes.set("customStyle",CUSTOM_MAP_TYPE),COORDINATE_MAP.setMapTypeId("customStyle"),addSearchBox(t=>{addCitiesToState(e,t)}),addRemoveCitiesControl(()=>{clearState(e)})}function addCitiesToState(e,...t){$("#post-error").hide(),e.cities.push(...t),onStateUpdated(e).catch(o=>{displayError("Error: "+o),e.cities.length===t.length?clearState(e):(e.cities=_.initial(e.cities,t.length),onStateUpdated(e))})}function onStateUpdated(e){return e.cityMarkers=drawCities(e.cities,e.cityMarkers),getNextMondayAt(e.cities[0].location).then(t=>getDurationsMatrix(e.cities,t)).then(t=>{fillTable("duration-table",e.cities,t,"seconds"),e.mdsMarkers=drawMds(e.cities,e.mdsMarkers,t)})}function clearState(e){e.cityMarkers.forEach(e=>{e.setMap(null)}),e.mdsMarkers.forEach(e=>{e.setMap(null)}),e.cities=[],e.cityMarkers=[],e.mdsMarkers=[],clearTable("distance-table"),clearTable("duration-table")}function drawCities(e,t){t.forEach(e=>{e.setMap(null)});const o=setMarkers(CITY_MAP,e),n=[];for(let t=0;t<e.length;t++){n[t]=[];for(let o=0;o<e.length;o++)n[t][o]=getDistanceFromLatLonInKm(e[t].location.lat(),e[t].location.lng(),e[o].location.lat(),e[o].location.lng())}return fillTable("distance-table",e,n,"km"),o}function drawMds(e,t,o){let n=getMdsCities(e,o);return t.forEach(e=>{e.setMap(null)}),setMarkers(COORDINATE_MAP,n)}function getMdsCities(e,t){if(e.length<=2)return e.map(e=>({name:e.name,location:e.location}));t=new mlMatrix.Matrix(t);const o=mlMatrix.Matrix.div(mlMatrix.Matrix.sub(t,t.min()),t.max()-t.min()),{coordinates:n,lossPerStep:a}=getMdsCoordinatesWithGradientDescent(o,{lr:1,momentum:0}),{lossPerStep:s}=getMdsCoordinatesWithGradientDescent(o,{lr:.5,momentum:.5}),{lossPerStep:i}=getMdsCoordinatesWithGaussNewton(o,{lr:.1}),l=getMdsCoordinatesClassical(o),r=getMdsLoss(o,l);plotLossesPerStep([{lossPerStep:a,label:"Gradient Descent",color:PostUtil.CHART_COLORS_DIVERSE[0]},{lossPerStep:s,label:"Momentum",color:PostUtil.CHART_COLORS_DIVERSE[1]},{lossPerStep:i,label:"Gauss-Newton",color:PostUtil.CHART_COLORS_DIVERSE[2]}],r);const c=fitCoordinatesToCities(n,e);return e.map((e,t)=>{const o=new google.maps.LatLng(c.get(t,0),c.get(t,1));return{name:e.name,location:o}})}function plotLossesPerStep(e,t){let o=null,n=null;const a=e.map(({lossPerStep:e,label:t,color:a})=>{const s=e.map((e,t)=>(o=null==o?e:Math.max(o,e),n=null==n?e:Math.min(n,e),{x:t,y:e}));return{label:`${t} (${e[e.length-1].toExponential(1)})`,data:s,borderColor:a,backgroundColor:a}}),s=Math.floor(Math.log10(n)),i=Math.ceil(Math.log10(o)),l=Math.pow(10,s),r=Math.pow(10,i);PostUtil.clearChart("optimizer-comparison-chart");const c={type:"line",data:{datasets:a},options:{scales:{xAxes:[{type:"linear",position:"bottom",scaleLabel:{display:!0,labelString:"Step"}}],yAxes:[{type:"logarithmic",ticks:{min:l,max:r,autoSkip:!0,callback:e=>e.toExponential(0)},scaleLabel:{display:!0,labelString:"Loss after step"},afterBuildTicks:function(e,t){t=[];for(let e=s;e<=i;e++)t.push(Math.pow(10,e));return t}}]},annotation:{annotations:[{type:"line",mode:"horizontal",scaleID:"y-axis-0",value:t,borderColor:"#666666",borderWidth:2,borderDash:[5,3],label:{enabled:!0,position:"right",content:`Classical MDS (${t.toExponential(1)})`,backgroundColor:"rgba(0,0,0,0)",fontColor:"#333333",fontStyle:"normal",yAdjust:-10}}]}}};new Chart("optimizer-comparison-chart",c)}function fitCoordinatesToCities(e,t){const o=t.map((function(e){return[e.location.lat(),e.location.lng()]})),n=new mlMatrix.Matrix(o),a=e.transpose(),s=n.transpose();return getSimilarityTransformation(a,s,!0).transpose()}function getDurationsMatrix(e,t){const o=e.map(e=>e.name);return new Promise((n,a)=>{DISTANCE_MATRIX_SERVICE.getDistanceMatrix({origins:o,destinations:o,travelMode:TRAVEL_MODE,drivingOptions:{departureTime:t},transitOptions:{departureTime:t}},(t,o)=>{if(o!==google.maps.DistanceMatrixStatus.OK)return void a("GoogleMaps could not compute the travel times between all cities.");const s=[];for(let o=0;o<t.rows.length;o++){const n=[],i=t.rows[o].elements.length;for(let s=0;s<i;s++){if(o===s){n.push(0);continue}const i=t.rows[o].elements[s];if(i.status!==google.maps.DistanceMatrixElementStatus.OK)return void a(`GoogleMaps could not find a public transport connection from ${e[o].name} to ${e[s].name}.`);n.push(i.duration.value)}s.push(n)}n(s)})})}function fillTable(e,t,o,n){clearTable(e);const a={min:getMinOfArray(o),max:getMaxOfArray(o)},s=document.getElementById(e),i=document.createElement("tr"),l=document.createElement("th");l.appendChild(document.createTextNode("From \\ To")),i.appendChild(l);for(const e of t){const t=document.createElement("th");t.appendChild(document.createTextNode(e.name)),i.appendChild(t)}s.appendChild(i);for(let e=0;e<o.length;e++){const i=document.createElement("tr"),l=document.createElement("th");l.appendChild(document.createTextNode(t[e].name)),i.appendChild(l);for(let t=0;t<o[e].length;t++){const s=o[e][t],l=document.createElement("td");let r="-";if(e!==t)if("seconds"===n)r=secondsToString(s);else{if("km"!==n)throw Error("Unknown unit "+n);r=Math.round(s)+" km"}l.style.backgroundColor=getCellColor(o[e][t],a),l.appendChild(document.createTextNode(r)),i.appendChild(l)}s.appendChild(i)}}function getNextMondayAt(e){const t=new Date,o=new Date,n=(8-t.getUTCDay()-1)%7+1;return o.setUTCDate(o.getUTCDate()+n),o.setUTCHours(12,0,0,0),$.get("https://maps.googleapis.com/maps/api/timezone/json",{location:`${e.lat()},${e.lng()}`,timestamp:(o.getTime()/1e3).toString(),key:"AIzaSyDZl5Gnv4_UUuWRvaGcjo_sn-XIKwCSHnA"}).then(e=>{if("OK"!==e.status)throw Error(e.errorMessage);const t=1e3*(e.rawOffset+e.dstOffset);return new Date(o.getTime()-t)})}function getCellColor(e,t){let o=(e-t.min)/(t.max-t.min);return o=Math.max(0,Math.min(1,o)),"rgba(255,170,170,"+o+")"}function secondsToString(e){if(e<60)return"-";const t=Math.floor(e/3600);return(t>0?t+" h ":"")+Math.floor(e%3600/60)+" min"}function clearTable(e){let t=document.getElementById(e);for(;null!=t.firstChild;)t.removeChild(t.firstChild)}function setMarkers(e,t,o=!0){const n=new google.maps.LatLngBounds,a=[];for(const o of t){const t=setMarker(e,o.name,o.location);a.push(t),n.extend(o.location)}return o&&e.fitBounds(n),a}function setMarker(e,t,o){return new MarkerWithLabel({position:o,draggable:!1,raiseOnDrag:!1,map:e,labelContent:t,labelAnchor:new google.maps.Point(22,0),labelClass:"labels"})}function getCityNameForPlace(e){for(const t of e.address_components)if("locality"===t.types[0])return t.long_name;return e.address_components[0].long_name}function getCities(e){const t=[];for(const o of e){const e=new Promise((e,t)=>{GEOCODER.geocode({address:o},(n,a)=>{if(a===google.maps.GeocoderStatus.OK){const t={name:o,location:n[0].geometry.location};e(t)}else t("GoogleMaps could not geocode all city names.")})});t.push(e)}return Promise.all(t)}function addSearchBox(e){const t=document.getElementById("pac-input"),o=new google.maps.places.SearchBox(t);CITY_MAP.controls[google.maps.ControlPosition.TOP_LEFT].push(t),google.maps.event.addListenerOnce(CITY_MAP,"idle",()=>{t.style.display="block"}),o.addListener("places_changed",(function(){const t=o.getPlaces();if(0===t.length)return;const n=t[0];if(null!=n&&null!=n.address_components){const t={name:getCityNameForPlace(n),location:n.geometry.location};e(t)}}))}function addRemoveCitiesControl(e){const t=document.createElement("div"),o=document.createElement("div");o.style.backgroundColor="#fff",o.style.border="2px solid #fff",o.style.borderRadius="3px",o.style.boxShadow="0 2px 6px rgba(0,0,0,.3)",o.style.cursor="pointer",o.style.marginBottom="22px",o.style.textAlign="center",o.style.marginRight="12px",o.style.marginTop="12px",o.title="Click to remove all markers from the map",t.appendChild(o);const n=document.createElement("div");n.style.color="rgb(25,25,25)",n.style.fontFamily="Roboto,Arial,sans-serif",n.style.fontSize="13px",n.style.lineHeight="24px",n.style.paddingLeft="5px",n.style.paddingRight="5px",n.innerHTML="Remove Cities",o.appendChild(n),o.addEventListener("click",e),t.index=1,CITY_MAP.controls[google.maps.ControlPosition.TOP_RIGHT].push(t)}$((function(){Chart.defaults.global.maintainAspectRatio=!1,Chart.defaults.global.elements.line.fill=!1,Chart.defaults.global.elements.line.tension=0,Chart.defaults.global.elements.point.radius=0;const e={cities:[],cityMarkers:[],mdsMarkers:[]};GEOCODER=new google.maps.Geocoder,DISTANCE_MATRIX_SERVICE=new google.maps.DistanceMatrixService,initMaps(e),getCities(INITIAL_CITY_NAMES).then(t=>{addCitiesToState(e,...t)}).catch(e=>{displayError("Error: "+e)})}));